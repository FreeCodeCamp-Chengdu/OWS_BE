{"version":3,"sources":["../source/GitHub.js"],"names":["OAuth","onDone","onError","Function","handleError","context","body","error","Object","assign","URIError","error_description","response","method","URLSearchParams","client_id","process","env","GITHUB_APP_ID","client_secret","GITHUB_APP_SECRET","code","query","fromEntries","text","entries","status","scope","split","headers","Authorization","access_token","Accept","user","json"],"mappings":";;;;;;;;;AAEA;;AAEA;;AAJA;AAMO,SAASA,KAAT,CAAeC,MAAf,EAAuBC,OAAvB,EAAgC;AACnCA,EAAAA,OAAO,GAAGA,OAAO,YAAYC,QAAnB,IAA+BD,OAAzC;;AAEA,iBAAeE,WAAf,CAA2BC,OAA3B,EAAoCC,IAApC,EAA0C;AACtC,UAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAIC,QAAJ,CAAaJ,IAAI,CAACK,iBAAlB,CAAd,EAAoD;AAC9DN,MAAAA,OAD8D;AAE9DC,MAAAA;AAF8D,KAApD,CAAd;AAKA,QAAIJ,OAAJ,EAAa,MAAMA,OAAO,CAACG,OAAD,EAAUE,KAAV,CAAb,CAAb,KACK,MAAMA,KAAN;AACR;;AAED,SAAO,MAAMF,OAAN,IAAiB;AACpB,QAAIO,QAAQ,GAAG,MAAM,wBACjB,6CADiB,EAEjB;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIP,MAAAA,IAAI,EAAE,IAAIQ,oBAAJ,CAAoB;AACtBC,QAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,aADD;AAEtBC,QAAAA,aAAa,EAAEH,OAAO,CAACC,GAAR,CAAYG,iBAFL;AAGtBC,QAAAA,IAAI,EAAEhB,OAAO,CAACiB,KAAR,CAAcD;AAHE,OAApB;AAFV,KAFiB,CAArB;AAYA,UAAMf,IAAI,GAAGE,MAAM,CAACe,WAAP,CACT,IAAIT,oBAAJ,EAAoB,MAAMF,QAAQ,CAACY,IAAT,EAA1B,GAA2CC,OAA3C,EADS,CAAb;AAIA,QAAIb,QAAQ,CAACc,MAAT,GAAkB,GAAtB,EAA2B,OAAO,MAAMtB,WAAW,CAACC,OAAD,EAAUC,IAAV,CAAxB;AAE3B,QAAIA,IAAI,CAACqB,KAAT,EAAgBrB,IAAI,CAACqB,KAAL,GAAarB,IAAI,CAACqB,KAAL,CAAWC,KAAX,CAAiB,GAAjB,CAAb;AAEhBhB,IAAAA,QAAQ,GAAG,MAAM,wBAAM,6BAAN,EAAqC;AAClDiB,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAG,SAAQxB,IAAI,CAACyB,YAAa,EADrC;AAELC,QAAAA,MAAM,EAAE;AAFH;AADyC,KAArC,CAAjB;AAOA1B,IAAAA,IAAI,CAAC2B,IAAL,GAAY,MAAMrB,QAAQ,CAACsB,IAAT,EAAlB;AAEA,QAAItB,QAAQ,CAACc,MAAT,GAAkB,GAAtB,EAA2B,MAAMtB,WAAW,CAACC,OAAD,EAAUC,IAAV,CAAjB,CAA3B,KACK,MAAML,MAAM,CAACI,OAAD,EAAUC,IAAV,CAAZ;AACR,GAhCD;AAiCH","sourcesContent":["// https://github.com/login/oauth/authorize?client_id=97d7a746d8d76c34e5d8&scope=user,repo\n\nimport { URLSearchParams } from 'url';\n\nimport fetch from 'node-fetch';\n\nexport function OAuth(onDone, onError) {\n    onError = onError instanceof Function && onError;\n\n    async function handleError(context, body) {\n        const error = Object.assign(new URIError(body.error_description), {\n            context,\n            body\n        });\n\n        if (onError) await onError(context, error);\n        else throw error;\n    }\n\n    return async context => {\n        var response = await fetch(\n            'https://github.com/login/oauth/access_token',\n            {\n                method: 'POST',\n                body: new URLSearchParams({\n                    client_id: process.env.GITHUB_APP_ID,\n                    client_secret: process.env.GITHUB_APP_SECRET,\n                    code: context.query.code\n                })\n            }\n        );\n\n        const body = Object.fromEntries(\n            new URLSearchParams(await response.text()).entries()\n        );\n\n        if (response.status > 299) return await handleError(context, body);\n\n        if (body.scope) body.scope = body.scope.split(',');\n\n        response = await fetch('https://api.github.com/user', {\n            headers: {\n                Authorization: `token ${body.access_token}`,\n                Accept: 'application/json'\n            }\n        });\n\n        body.user = await response.json();\n\n        if (response.status > 299) await handleError(context, body);\n        else await onDone(context, body);\n    };\n}\n"],"file":"GitHub.js"}