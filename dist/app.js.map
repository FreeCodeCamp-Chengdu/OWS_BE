{"version":3,"sources":["../source/app.js"],"names":["app","Koa","use","Session","entry","context","query","source","update","search","Form","create","searchForm","reply","queryReply","bind","queryForm","queryStatistic","rule","RecurrenceRule","hour"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AAEA;;AAEO,MAAMA,GAAG,GAAG,IAAIC,YAAJ,GACdC,GADc,CACV,mBAAI,GAAJ,EAASC,OAAO,CAACC,KAAjB,CADU,EAEdF,GAFc,CAEV,mBAAI,QAAJ,EAAcG,OAAO,IAAIF,OAAO,CAACE,OAAO,CAACC,KAAR,CAAcC,MAAf,CAAP,CAA8BF,OAA9B,CAAzB,CAFU,EAGdH,GAHc,CAGV,oBAAK,kBAAL,EAAyB,6BAAeM,gBAAf,CAAzB,CAHU,EAIdN,GAJc,CAIV,mBAAI,WAAJ,EAAiBO,gBAAjB,CAJU,EAKdP,GALc,CAMX,oBACI,OADJ,EAEI,6BAAeG,OAAO,IAClBK,IAAI,CAACL,OAAO,CAACC,KAAR,CAAcC,MAAf,CAAJ,CAA2BI,MAA3B,CAAkCN,OAAlC,CADJ,CAFJ,CANW,EAadH,GAbc,CAaV,mBAAI,OAAJ,EAAaQ,IAAI,CAACE,UAAlB,CAbU,EAcdV,GAdc,CAeX,oBAAK,aAAL,EAAoBG,OAAO,IACvBK,IAAI,CAACL,OAAO,CAACC,KAAR,CAAcC,MAAf,CAAJ,CAA2BM,KAA3B,CAAiCR,OAAjC,CADJ,CAfW,EAmBdH,GAnBc,CAmBV,mBAAI,sBAAJ,EAA4BQ,IAAI,CAACI,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,EAA2BL,IAA3B,CAA5B,CAnBU,EAoBdR,GApBc,CAoBV,mBAAI,WAAJ,EAAiBQ,IAAI,CAACM,SAAL,CAAeD,IAAf,CAAoB,IAApB,EAA0BL,IAA1B,CAAjB,CApBU,EAqBdR,GArBc,CAqBV,mBAAI,qBAAJ,EAA2BQ,IAAI,CAACO,cAAhC,CArBU,CAAZ;;AAuBP,MAAMC,IAAI,GAAG,IAAIC,4BAAJ,EAAb;AAEAD,IAAI,CAACE,IAAL,GAAY,CAAZ;AAEA,+BAAYF,IAAZ,EAAkB,MAAM,sBAAO;AAAEZ,EAAAA,KAAK,EAAE;AAAT,CAAP,CAAxB","sourcesContent":["import Koa from 'koa';\nimport { get, post } from 'koa-route';\n\nimport { requireSession } from './utility';\n\nimport * as Session from './session';\nimport { update, search } from './activity';\nimport * as Form from './form';\n\nimport { scheduleJob, RecurrenceRule } from 'node-schedule';\n\nexport const app = new Koa()\n    .use(get('/', Session.entry))\n    .use(get('/OAuth', context => Session[context.query.source](context)))\n    .use(post('/activity/update', requireSession(update)))\n    .use(get('/activity', search))\n    .use(\n        post(\n            '/form',\n            requireSession(context =>\n                Form[context.query.source].create(context)\n            )\n        )\n    )\n    .use(get('/form', Form.searchForm))\n    .use(\n        post('/form/reply', context =>\n            Form[context.query.source].reply(context)\n        )\n    )\n    .use(get('/form/:fid/reply/:id', Form.queryReply.bind(null, Form)))\n    .use(get('/form/:id', Form.queryForm.bind(null, Form)))\n    .use(get('/form/:id/statistic', Form.queryStatistic));\n\nconst rule = new RecurrenceRule();\n\nrule.hour = 1;\n\nscheduleJob(rule, () => update({ query: {} }));\n"],"file":"app.js"}