{"version":3,"sources":["../source/app.js"],"names":["app","Koa","GITHUB_APP_ID","GITHUB_APP_SECRET","process","env","use","context","body","user","User","loginWithAuthData","access_token","expires_in","uid","id","scope","saveCurrentUser","save","username","login","email","github","redirect","update","search","currentUser","get","rule","RecurrenceRule","hour","query"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;AAEA;;AAEO,MAAMA,GAAG,GAAG,IAAIC,YAAJ,EAAZ;;AAEP,MAAM;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,IAAuCC,OAAO,CAACC,GAArD;AAEAL,GAAG,CAACM,GAAJ,CACI,mBACI,eADJ,EAEI,mBAAMJ,aAAN,EAAqBC,iBAArB,EAAwC,OAAOI,OAAP,EAAgBC,IAAhB,KAAyB;AAC7D,QAAMC,IAAI,GAAG,MAAMC,iBAAKC,iBAAL,CACf;AACIC,IAAAA,YAAY,EAAEJ,IAAI,CAACI,YADvB;AAEIC,IAAAA,UAAU,EAAE,IAFhB;AAGIC,IAAAA,GAAG,EAAEN,IAAI,CAACC,IAAL,CAAUM,EAAV,GAAe,EAHxB;AAIIC,IAAAA,KAAK,EAAER,IAAI,CAACQ,KAAL,GAAa;AAJxB,GADe,EAOf,QAPe,CAAnB;AAUAT,EAAAA,OAAO,CAACU,eAAR,CAAwBR,IAAxB;AAEA,QAAMA,IAAI,CAACS,IAAL,CACF;AACIC,IAAAA,QAAQ,EAAEX,IAAI,CAACC,IAAL,CAAUW,KADxB;AAEIC,IAAAA,KAAK,EAAEb,IAAI,CAACC,IAAL,CAAUY,KAFrB;AAGIC,IAAAA,MAAM,EAAEd,IAAI,CAACC;AAHjB,GADE,EAMF;AAAEA,IAAAA;AAAF,GANE,CAAN;AASAF,EAAAA,OAAO,CAACgB,QAAR,CAAiB,aAAaf,IAAI,CAACI,YAAnC;AACH,CAvBD,CAFJ,CADJ,EA6BKN,GA7BL,CA6BS,oBAAK,kBAAL,EAAyBkB,gBAAzB,CA7BT,EA8BKlB,GA9BL,CA8BS,mBAAI,WAAJ,EAAiBmB,gBAAjB,CA9BT,EA+BKnB,GA/BL,CAgCQC,OAAO,IACFA,OAAO,CAACC,IAAR,GAAgB;aAEbD,OAAO,CAACmB,WAAR,GACMnB,OAAO,CAACmB,WAAR,CAAoBC,GAApB,CAAwB,UAAxB,CADN,GAEM,SACL;8DAC6CzB,aAAc;;KAvC5E;AA4CA,MAAM0B,IAAI,GAAG,IAAIC,4BAAJ,EAAb;AAEAD,IAAI,CAACE,IAAL,GAAY,CAAZ;AAEA,+BAAYF,IAAZ,EAAkB,MAAM,sBAAO;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAP,CAAxB","sourcesContent":["import Koa from 'koa';\nimport { get, post } from 'koa-route';\n\nimport { User } from 'leanengine';\n\nimport { OAuth } from './GitHub';\nimport { update, search } from './activity';\n\nimport { scheduleJob, RecurrenceRule } from 'node-schedule';\n\nexport const app = new Koa();\n\nconst { GITHUB_APP_ID, GITHUB_APP_SECRET } = process.env;\n\napp.use(\n    get(\n        '/GitHub/OAuth',\n        OAuth(GITHUB_APP_ID, GITHUB_APP_SECRET, async (context, body) => {\n            const user = await User.loginWithAuthData(\n                {\n                    access_token: body.access_token,\n                    expires_in: 7200,\n                    uid: body.user.id + '',\n                    scope: body.scope + ''\n                },\n                'github'\n            );\n\n            context.saveCurrentUser(user);\n\n            await user.save(\n                {\n                    username: body.user.login,\n                    email: body.user.email,\n                    github: body.user\n                },\n                { user }\n            );\n\n            context.redirect('/?token=' + body.access_token);\n        })\n    )\n)\n    .use(post('/activity/update', update))\n    .use(get('/activity', search))\n    .use(\n        context =>\n            (context.body = `\n<h1>Hello, ${\n                context.currentUser\n                    ? context.currentUser.get('username')\n                    : 'FCC-CDC'\n                }!</h1>\n<a href=\"https://github.com/login/oauth/authorize?client_id=${GITHUB_APP_ID}&scope=user,repo\">\n    Sign in\n</a>`)\n    );\n\nconst rule = new RecurrenceRule();\n\nrule.hour = 1;\n\nscheduleJob(rule, () => update({ query: {} }));\n"],"file":"app.js"}