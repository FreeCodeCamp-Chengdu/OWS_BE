{"version":3,"sources":["../source/app.js"],"names":["app","Koa","use","Session","entry","context","query","source","update","search","Form","create","reply","queryReply","bind","queryForm","queryStatistic","rule","RecurrenceRule","hour"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AAEO,MAAMA,GAAG,GAAG,IAAIC,YAAJ,GACdC,GADc,CACV,mBAAI,GAAJ,EAASC,OAAO,CAACC,KAAjB,CADU,EAEdF,GAFc,CAEV,mBAAI,QAAJ,EAAcG,OAAO,IAAIF,OAAO,CAACE,OAAO,CAACC,KAAR,CAAcC,MAAf,CAAP,CAA8BF,OAA9B,CAAzB,CAFU,EAGdH,GAHc,CAGV,oBAAK,kBAAL,EAAyBM,gBAAzB,CAHU,EAIdN,GAJc,CAIV,mBAAI,WAAJ,EAAiBO,gBAAjB,CAJU,EAKdP,GALc,CAKV,oBAAK,OAAL,EAAcG,OAAO,IAAIK,IAAI,CAACL,OAAO,CAACC,KAAR,CAAcC,MAAf,CAAJ,CAA2BI,MAA3B,CAAkCN,OAAlC,CAAzB,CALU,EAMdH,GANc,CAOX,oBAAK,aAAL,EAAoBG,OAAO,IACvBK,IAAI,CAACL,OAAO,CAACC,KAAR,CAAcC,MAAf,CAAJ,CAA2BK,KAA3B,CAAiCP,OAAjC,CADJ,CAPW,EAWdH,GAXc,CAWV,mBAAI,sBAAJ,EAA4BQ,IAAI,CAACG,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,EAA2BJ,IAA3B,CAA5B,CAXU,EAYdR,GAZc,CAYV,mBAAI,WAAJ,EAAiBQ,IAAI,CAACK,SAAL,CAAeD,IAAf,CAAoB,IAApB,EAA0BJ,IAA1B,CAAjB,CAZU,EAadR,GAbc,CAaV,mBAAI,qBAAJ,EAA2BQ,IAAI,CAACM,cAAhC,CAbU,CAAZ;;AAeP,MAAMC,IAAI,GAAG,IAAIC,4BAAJ,EAAb;AAEAD,IAAI,CAACE,IAAL,GAAY,CAAZ;AAEA,+BAAYF,IAAZ,EAAkB,MAAM,sBAAO;AAAEX,EAAAA,KAAK,EAAE;AAAT,CAAP,CAAxB","sourcesContent":["import Koa from 'koa';\nimport { get, post } from 'koa-route';\n\nimport * as Session from './session';\nimport { update, search } from './activity';\nimport * as Form from './form';\n\nimport { scheduleJob, RecurrenceRule } from 'node-schedule';\n\nexport const app = new Koa()\n    .use(get('/', Session.entry))\n    .use(get('/OAuth', context => Session[context.query.source](context)))\n    .use(post('/activity/update', update))\n    .use(get('/activity', search))\n    .use(post('/form', context => Form[context.query.source].create(context)))\n    .use(\n        post('/form/reply', context =>\n            Form[context.query.source].reply(context)\n        )\n    )\n    .use(get('/form/:fid/reply/:id', Form.queryReply.bind(null, Form)))\n    .use(get('/form/:id', Form.queryForm.bind(null, Form)))\n    .use(get('/form/:id/statistic', Form.queryStatistic));\n\nconst rule = new RecurrenceRule();\n\nrule.hour = 1;\n\nscheduleJob(rule, () => update({ query: {} }));\n"],"file":"app.js"}