{"version":3,"sources":["../source/utility.js"],"names":["request","URI","errorHandler","options","response","status","error","Object","assign","URIError","statusText","code","body","json","error_description","valueOf","field","input","querySelector","value","Array","from","filter","Boolean","querySelectorAll","searchQuery","table","keys","words","LC","Query","or","split","map","word","key","contains","flat","updateRecord","data","record","values","join","first","extend","save"],"mappings":"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","sourcesContent":["import LC from 'leanengine';\n\nimport fetch from 'node-fetch';\n\n/**\n * @param {String|URL}       URI\n * @param {Object}           [options={}]           - https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters\n * @param {HTTPErrorHandler} [options.errorHandler]\n *\n * @return {Response} https://developer.mozilla.org/en-US/docs/Web/API/Response\n *\n * @throw {URIError} With a `response` property\n */\nexport async function request(URI, { errorHandler, ...options } = {}) {\n    const response = await fetch(URI, options);\n\n    if (response.status < 300) return response;\n\n    const error = errorHandler\n        ? await errorHandler(response)\n        : Object.assign(new URIError(response.statusText), {\n            code: response.status\n        });\n\n    error.response = response;\n\n    throw error;\n}\n\n/**\n * @typedef {Function} HTTPErrorHandler\n *\n * @param {Response} response\n *\n * @return {Error}\n */\nexport async function errorHandler(response) {\n    const body = await response.json();\n\n    const error = new URIError(body.error_description);\n\n    (error.code = response.status), (error.body = body);\n\n    return error;\n}\n\n/**\n * @param {HTMLElement} field\n *\n * @return {String|String[]}\n */\nexport function valueOf(field) {\n    var input = field.querySelector(\n        'input[name]:not([type=\"radio\"], [type=\"checkbox\"]), textarea[name]'\n    );\n\n    if (input) return input.value;\n\n    input = field.querySelector('select[name]');\n\n    if (input)\n        return Array.from(input.options, ({ value }) => value).filter(Boolean);\n\n    input = field.querySelectorAll(\n        'input[name][type=\"radio\"], input[name][type=\"checkbox\"]'\n    );\n\n    if (input[0])\n        return Array.from(input, ({ value }) => value).filter(Boolean);\n}\n\n/**\n * @param {String}   table\n * @param {String[]} keys\n * @param {String}   words\n *\n * @return {AV.Query} https://leancloud.github.io/javascript-sdk/docs/AV.Query.html\n */\nexport function searchQuery(table, keys, words) {\n    return LC.Query.or(\n        ...words\n            .split(/\\s+/)\n            .map(word =>\n                keys.map(key => new LC.Query(table).contains(key, word))\n            )\n            .flat()\n    );\n}\n\n/**\n * @param {String} table\n * @param {Object} data\n * @param {Object} [options] - https://leancloud.github.io/javascript-sdk/docs/global.html#AuthOptions\n *\n * @return {AV.Object} https://leancloud.github.io/javascript-sdk/docs/AV.Object.html\n */\nexport async function updateRecord(table, data, options) {\n    var record = await searchQuery(\n        table,\n        Object.keys(data),\n        Object.values(data).join(' ')\n    ).first();\n\n    record = record || new (LC.Object.extend(table))();\n\n    await record.save(data, options);\n\n    return record;\n}\n"],"file":"utility.js"}