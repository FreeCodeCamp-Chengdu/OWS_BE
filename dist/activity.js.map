{"version":3,"sources":["../source/activity.js"],"names":["query","LC","Query","Activity","Object","extend","fetching","update","context","RangeError","list","find","map","item","toJSON","interval","data","objectId","createWithoutData","link","save","error","search","keywords","contains","body","addDescending","limit"],"mappings":";;;;;;;;;;;;AAAA;;AAEA;;AAEA,MAAMA,KAAK,GAAG,IAAIC,oBAAGC,KAAP,CAAa,UAAb,CAAd;AAAA,MACIC,QAAQ,GAAGF,oBAAGG,MAAH,CAAUC,MAAV,CAAiB,UAAjB,CADf;;AAGA,IAAIC,QAAJ;;AAEO,eAAeC,MAAf,CAAsBC,OAAtB,EAA+B;AAClC,MAAIF,QAAJ,EAAc,MAAM,IAAIG,UAAJ,CAAe,oBAAf,CAAN;AAEdH,EAAAA,QAAQ,GAAG,CAAX;AAEA,QAAMI,IAAI,GAAG,CAAC,MAAMV,KAAK,CAACW,IAAN,EAAP,EAAqBC,GAArB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,MAAL,EAAjC,CAAb;;AAEA,MAAI;AAAA;AAAA;;AAAA;;AAAA;AACA,wDAAuB,uBAAaJ,IAAb,EAAmBF,OAAO,CAACR,KAAR,CAAce,QAAjC,CAAvB,oLAAmE;AAAA,YAApDF,IAAoD;AAC/D,cAAMG,IAAI,GAAGH,IAAI,CAACI,QAAL,GACPhB,oBAAGG,MAAH,CAAUc,iBAAV,CAA4B,UAA5B,EAAwCL,IAAI,CAACI,QAA7C,CADO,GAEP,IAAId,QAAJ,EAFN;AAIAU,QAAAA,IAAI,CAACM,IAAL,GAAYN,IAAI,CAACM,IAAL,GAAY,EAAxB;AAEA,cAAMH,IAAI,CAACI,IAAL,CAAUP,IAAV,CAAN;AACH;AATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUH,GAVD,CAUE,OAAOQ,KAAP,EAAc;AACZf,IAAAA,QAAQ,GAAG,CAAX;AAEA,UAAMe,KAAN;AACH;;AAEDf,EAAAA,QAAQ,GAAG,CAAX;AACH;;AAEM,eAAegB,MAAf,CAAsBd,OAAtB,EAA+B;AAClC,QAAM;AAAEe,IAAAA;AAAF,MAAef,OAAO,CAACR,KAA7B;AAAA,QACIA,KAAK,GAAG,IAAIC,oBAAGC,KAAP,CAAa,UAAb,CADZ;AAGA,MAAIqB,QAAJ,EACIvB,KAAK,CAACwB,QAAN,CAAe,OAAf,EAAwBD,QAAxB,EAAkCC,QAAlC,CAA2C,SAA3C,EAAsDD,QAAtD;AAEJf,EAAAA,OAAO,CAACiB,IAAR,GAAe,MAAMzB,KAAK,CACrB0B,aADgB,CACF,OADE,EAEhBA,aAFgB,CAEF,KAFE,EAGhBC,KAHgB,CAGV,EAHU,EAIhBhB,IAJgB,EAArB;AAKH","sourcesContent":["import LC from 'leanengine';\n\nimport updateEvents from '@fcc-cdc/it-events';\n\nconst query = new LC.Query('Activity'),\n    Activity = LC.Object.extend('Activity');\n\nvar fetching;\n\nexport async function update(context) {\n    if (fetching) throw new RangeError('Crawler is running');\n\n    fetching = 1;\n\n    const list = (await query.find()).map(item => item.toJSON());\n\n    try {\n        for await (let item of updateEvents(list, context.query.interval)) {\n            const data = item.objectId\n                ? LC.Object.createWithoutData('Activity', item.objectId)\n                : new Activity();\n\n            item.link = item.link + '';\n\n            await data.save(item);\n        }\n    } catch (error) {\n        fetching = 0;\n\n        throw error;\n    }\n\n    fetching = 0;\n}\n\nexport async function search(context) {\n    const { keywords } = context.query,\n        query = new LC.Query('Activity');\n\n    if (keywords)\n        query.contains('title', keywords).contains('address', keywords);\n\n    context.body = await query\n        .addDescending('start')\n        .addDescending('end')\n        .limit(20)\n        .find();\n}\n"],"file":"activity.js"}