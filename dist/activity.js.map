{"version":3,"sources":["../source/activity.js"],"names":["Activity","LC","Object","extend","fetching","update","context","RangeError","list","Query","find","map","item","toJSON","query","interval","data","objectId","createWithoutData","link","createdAt","updatedAt","save","user","currentUser","error","search","keywords","page","rows","from","to","Date","isNaN","greaterThanOrEqualTo","lessThanOrEqualTo","body","addDescending","limit","skip"],"mappings":";;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA,MAAMA,QAAQ,GAAGC,oBAAGC,MAAH,CAAUC,MAAV,CAAiB,UAAjB,CAAjB;;AAEA,IAAIC,QAAJ;;AAEO,eAAeC,MAAf,CAAsBC,OAAtB,EAA+B;AAClC,MAAIF,QAAJ,EAAc,MAAM,IAAIG,UAAJ,CAAe,oBAAf,CAAN;AAEdH,EAAAA,QAAQ,GAAG,CAAX;AAEA,QAAMI,IAAI,GAAG,CAAC,MAAM,IAAIP,oBAAGQ,KAAP,CAAa,UAAb,EAAyBC,IAAzB,EAAP,EAAwCC,GAAxC,CAA4CC,IAAI,IACzDA,IAAI,CAACC,MAAL,EADS,CAAb;;AAIA,MAAI;AAAA;AAAA;;AAAA;;AAAA;AACA,wDAAuB,uBAAaL,IAAb,EAAmBF,OAAO,CAACQ,KAAR,CAAcC,QAAjC,CAAvB,oLAAmE;AAAA,YAApDH,IAAoD;AAC/D,cAAMI,IAAI,GAAGJ,IAAI,CAACK,QAAL,GACPhB,oBAAGC,MAAH,CAAUgB,iBAAV,CAA4B,UAA5B,EAAwCN,IAAI,CAACK,QAA7C,CADO,GAEP,IAAIjB,QAAJ,EAFN;AAIAY,QAAAA,IAAI,CAACO,IAAL,GAAYP,IAAI,CAACO,IAAL,GAAY,EAAxB;AACA,eAAOP,IAAI,CAACK,QAAZ;AACA,eAAOL,IAAI,CAACQ,SAAZ;AACA,eAAOR,IAAI,CAACS,SAAZ;AAEA,cAAML,IAAI,CAACM,IAAL,CAAUV,IAAV,EAAgB;AAAEW,UAAAA,IAAI,EAAEjB,OAAO,CAACkB;AAAhB,SAAhB,CAAN;AACH;AAZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaH,GAbD,CAaE,OAAOC,KAAP,EAAc;AACZrB,IAAAA,QAAQ,GAAG,CAAX;AAEA,UAAMqB,KAAN;AACH;;AAEDrB,EAAAA,QAAQ,GAAG,CAAX;AACH;;AAEM,eAAesB,MAAf,CAAsBpB,OAAtB,EAA+B;AAClC,MAAI;AAAEqB,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA,IAAxB;AAA8BC,IAAAA;AAA9B,MAAqCzB,OAAO,CAACQ,KAAjD;AAECc,EAAAA,IAAI,GAAGA,IAAI,IAAI,CAAhB,EACCC,IAAI,GAAGA,IAAI,IAAI,EADhB,EAECC,IAAI,GAAG,IAAIE,IAAJ,CAASF,IAAT,CAFR,EAGCC,EAAE,GAAG,IAAIC,IAAJ,CAASD,EAAT,CAHN;AAKA,QAAMjB,KAAK,GAAGa,QAAQ,GAChB,0BAAY,UAAZ,EAAwB,CAAC,OAAD,EAAU,SAAV,CAAxB,EAA8CA,QAA9C,CADgB,GAEhB,IAAI1B,oBAAGQ,KAAP,CAAa,UAAb,CAFN;AAIA,MAAI,CAACwB,KAAK,CAAC,CAACH,IAAF,CAAV,EAAmBhB,KAAK,CAACoB,oBAAN,CAA2B,OAA3B,EAAoCJ,IAApC;AAEnB,MAAI,CAACG,KAAK,CAAC,CAACF,EAAF,CAAV,EAAiBjB,KAAK,CAACqB,iBAAN,CAAwB,OAAxB,EAAiCJ,EAAjC;AAEjBzB,EAAAA,OAAO,CAAC8B,IAAR,GAAe,MAAMtB,KAAK,CACrBuB,aADgB,CACF,OADE,EAEhBA,aAFgB,CAEF,KAFE,EAGhBC,KAHgB,CAGVT,IAHU,EAIhBU,IAJgB,CAIX,CAACX,IAAI,GAAG,CAAR,IAAaC,IAJF,EAKhBnB,IALgB,EAArB;AAMH","sourcesContent":["import LC from 'leanengine';\n\nimport updateEvents from '@fcc-cdc/it-events';\n\nimport { searchQuery } from './utility';\n\nconst Activity = LC.Object.extend('Activity');\n\nvar fetching;\n\nexport async function update(context) {\n    if (fetching) throw new RangeError('Crawler is running');\n\n    fetching = 1;\n\n    const list = (await new LC.Query('Activity').find()).map(item =>\n        item.toJSON()\n    );\n\n    try {\n        for await (let item of updateEvents(list, context.query.interval)) {\n            const data = item.objectId\n                ? LC.Object.createWithoutData('Activity', item.objectId)\n                : new Activity();\n\n            item.link = item.link + '';\n            delete item.objectId;\n            delete item.createdAt;\n            delete item.updatedAt;\n\n            await data.save(item, { user: context.currentUser });\n        }\n    } catch (error) {\n        fetching = 0;\n\n        throw error;\n    }\n\n    fetching = 0;\n}\n\nexport async function search(context) {\n    var { keywords, page, rows, from, to } = context.query;\n\n    (page = page || 1),\n    (rows = rows || 20),\n    (from = new Date(from)),\n    (to = new Date(to));\n\n    const query = keywords\n        ? searchQuery('Activity', ['title', 'address'], keywords)\n        : new LC.Query('Activity');\n\n    if (!isNaN(+from)) query.greaterThanOrEqualTo('start', from);\n\n    if (!isNaN(+to)) query.lessThanOrEqualTo('start', to);\n\n    context.body = await query\n        .addDescending('start')\n        .addDescending('end')\n        .limit(rows)\n        .skip((page - 1) * rows)\n        .find();\n}\n"],"file":"activity.js"}