{"version":3,"sources":["../source/form.js"],"names":["Form","LC","Object","extend","Reply","JinShuJu","create","context","id","user","key","request","body","data","errorHandler","json","source","form","save","status","reply","meta","Query","equalTo","find","assign","URIError","code"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA,MAAMA,IAAI,GAAGC,oBAAGC,MAAH,CAAUC,MAAV,CAAiB,MAAjB,CAAb;AAAA,MACIC,KAAK,GAAGH,oBAAGC,MAAH,CAAUC,MAAV,CAAiB,OAAjB,CADZ;;AAGO,MAAME,QAAQ,GAAG;AACpB,QAAMC,MAAN,CAAaC,OAAb,EAAsB;AAClB,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,IAAN;AAAYC,MAAAA;AAAZ,QAAoBH,OAAO,CAACI,OAAR,CAAgBC,IAA1C;AAEA,UAAMC,IAAI,GAAG,MAAM,CAAC,MAAM,sBACrB,WAAUJ,IAAK,IAAGC,GAAI,8BAA6BF,EAAG,EADjC,EAEtB;AAAEM,MAAAA,YAAY,EAAZA;AAAF,KAFsB,CAAP,EAGhBC,IAHgB,EAAnB;AAKCF,IAAAA,IAAI,CAACG,MAAL,GAAc,UAAf,EAA6BH,IAAI,CAACI,IAAL,GAAYT,EAAzC;AAEA,UAAM,IAAIR,IAAJ,GAAWkB,IAAX,CAAgBL,IAAhB,CAAN;AAECN,IAAAA,OAAO,CAACY,MAAR,GAAiB,GAAlB,EAAyBZ,OAAO,CAACK,IAAR,GAAe,EAAxC;AACH,GAdmB;;AAepB,QAAMQ,KAAN,CAAYb,OAAZ,EAAqB;AACjB,UAAM;AAAEU,MAAAA;AAAF,QAAWV,OAAO,CAACI,OAAR,CAAgBC,IAAjC;AAEA,UAAMS,IAAI,GAAG,MAAM,IAAIpB,oBAAGqB,KAAP,CAAa,MAAb,EACdC,OADc,CACN,QADM,EACI,UADJ,EAEdA,OAFc,CAEN,MAFM,EAEEN,IAFF,EAGdO,IAHc,EAAnB;AAKA,QAAI,CAACH,IAAI,CAAC,CAAD,CAAT,EACI,MAAMnB,MAAM,CAACuB,MAAP,CAAc,IAAIC,QAAJ,CAAaT,IAAI,GAAG,YAApB,CAAd,EAAiD;AACnDU,MAAAA,IAAI,EAAE;AAD6C,KAAjD,CAAN;AAIJ,UAAM,IAAIvB,KAAJ,GAAYc,IAAZ,CACFhB,MAAM,CAACuB,MAAP,CACI;AAAET,MAAAA,MAAM,EAAE,UAAV;AAAsBC,MAAAA,IAAI,EAAEI,IAAI,CAAC,CAAD;AAAhC,KADJ,EAEId,OAAO,CAACI,OAAR,CAAgBC,IAFpB,CADE,CAAN;AAOCL,IAAAA,OAAO,CAACY,MAAR,GAAiB,GAAlB,EAAyBZ,OAAO,CAACK,IAAR,GAAe,EAAxC;AACH;;AApCmB,CAAjB","sourcesContent":["import LC from 'leanengine';\n\nimport { request, errorHandler } from './utility';\n\nconst Form = LC.Object.extend('Form'),\n    Reply = LC.Object.extend('Reply');\n\nexport const JinShuJu = {\n    async create(context) {\n        const { id, user, key } = context.request.body;\n\n        const data = await (await request(\n            `https://${user}:${key}@jinshuju.net/api/v1/forms/${id}`,\n            { errorHandler }\n        )).json();\n\n        (data.source = 'JinShuJu'), (data.form = id);\n\n        await new Form().save(data);\n\n        (context.status = 201), (context.body = '');\n    },\n    async reply(context) {\n        const { form } = context.request.body;\n\n        const meta = await new LC.Query('Form')\n            .equalTo('source', 'JinShuJu')\n            .equalTo('form', form)\n            .find();\n\n        if (!meta[0])\n            throw Object.assign(new URIError(form + ' not found'), {\n                code: 400\n            });\n\n        await new Reply().save(\n            Object.assign(\n                { source: 'JinShuJu', form: meta[0] },\n                context.request.body\n            )\n        );\n\n        (context.status = 201), (context.body = '');\n    }\n};\n"],"file":"form.js"}